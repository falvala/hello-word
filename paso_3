%% PROBLEMA #10: 
% Vamos a poner el “dot” en nuestra “dot probe”. Programa un pequeño cuadrado blanco 
% (50 pixeles de lado) que aparezca en el centro de nuestro cuadrado cuando los estímulos
% lleven en la pantalla 250 ms. Este cuadrado blanco es el “dot probe”. 
% Es decir, cada ensayo sería ahora: 

% Cruz de fijación-->Estímulos(250 ms) --> Estímulos + “dot probe” (1750 ms) -->Pantalla vacía
%%
n = 6;  
Screen ('Preference','SkipSyncTests', 1); %% just when debbuging
[wPtr, Rect] = Screen('OpenWindow', 0, [180 180 180]);
Screen('Flip', wPtr); WaitSecs(1);

%parametros pantalla:
W = Rect(RectRight); H = RectHeight(Rect); [X,Y] = RectCenter(Rect); a= (X+W/8)- (X-W/8);
left_screen= [W/2-W/8-a H/2-H/8 W/2-W/8 H/2+H/8];
right_screen= [X+W/8 Y-H/8 X+W/8+a Y+H/8];
[right_dotX,right_dotY] = RectCenter (right_screen);
[left_dotX,left_dotY] = RectCenter (left_screen);
%%
%define el tipo de ensayo:
tipo_trial = zeros (1,n);
tipo_trial (1, 1:n/2)=1;
tipo_trial (1, (n/2+1):end)=2;  

%% Ciclo de ensayos
%comienzan los ensayos (n veces)
for i= 1:n 
    %secuencia ensayo:
    % 0.parametros tiempo
    time= 0.250; %tiempo de 
    timedot=1.750; %tiempo de presentación del estímulo
    timefix= 0.2 + (0.5-0.2).*rand; %% elige un numero aleatorio entre 0.2 y 0.5
    %% 1.punto de fijación:
    FixCross = [X-1,Y-20,X+1,Y+20;X-20,Y-1,X+20,Y+1]; %dibuja dos barras de ancho 1*20, con distinta orientación, forma una "+"
    Screen('FillRect', wPtr, [255,255,255], FixCross');
    Screen('Flip', wPtr);
    WaitSecs(timefix);
    % 2.estimulos
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
    Screen('Flip', wPtr); WaitSecs(time);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
    Screen('Flip', wPtr); WaitSecs(time);
    end
    % 3. estimulos + dot 
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
    Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
    Screen('Flip', wPtr); WaitSecs(timedot);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
    Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot
    Screen('Flip', wPtr); WaitSecs(timedot);
    end
    % 4.pantalla vacía
    Screen('FillRect', wPtr, [180 180 180]);
    Screen('Flip', wPtr); WaitSecs(0.5);
  
end
Screen ('CloseAll')

%% Problema #11.
% En este problema vamos a crear ensayos congruentes y otros incongruentes. Haz que el “dot probe” 
% aparezca en el centro del círculo 1/3 de los ensayos (ensayos incongruentes). Los restantes 2/3 
% de los ensayos (ensayos congruentes) la “dot probe” aparecerá en el centro del cuadrado 
%(como en el problema #10). 

%(TIP: Añade una fila más a <tipo_trial>. La primera fila seguirá sirviendo para indicar la 
% posición de los estímulos (cuadrado y círculo). La segunda fila la podemos usar para indicar 
% la posición del dot probe) 

%% 
clear all
n= 6; 
%% 
Screen ('Preference','SkipSyncTests', 1); %% just when debbuging
[wPtr, Rect] = Screen('OpenWindow', 0, [180 180 180]);
Screen('Flip', wPtr); WaitSecs(1);

%parametros pantalla:
W = Rect(RectRight); H = RectHeight(Rect); [X,Y] = RectCenter(Rect); a= (X+W/8)- (X-W/8);
left_screen= [W/2-W/8-a H/2-H/8 W/2-W/8 H/2+H/8];
right_screen= [X+W/8 Y-H/8 X+W/8+a Y+H/8];
[right_dotX,right_dotY] = RectCenter (right_screen);
[left_dotX,left_dotY] = RectCenter (left_screen);
%%
%define el tipo de ensayo:
tipo_trial = zeros (2,n);
tipo_trial (1, 1:n/2)=1;
tipo_trial (1, (n/2+1):end)=2;  
tipo_trial (2, 1:n/3)= 1;
tipo_trial (2, (n/3*2-1):end)=2;
%% Ciclo de ensayos
%comienzan los ensayos (n veces)
for i= 1:n 
    %secuencia ensayo:
    % 0.parametros tiempo
    time= 0.250; %tiempo de 
    timedot=1.750; %tiempo de presentación del estímulo
    timefix= 0.2 + (0.5-0.2).*rand; %% elige un numero aleatorio entre 0.2 y 0.5
    %% 1.punto de fijación:
    FixCross = [X-1,Y-20,X+1,Y+20;X-20,Y-1,X+20,Y+1]; %dibuja dos barras de ancho 1*20, con distinta orientación, forma una "+"
    Screen('FillRect', wPtr, [255,255,255], FixCross');
    Screen('Flip', wPtr);
    WaitSecs(timefix);
    %% 2.estimulos
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
    Screen('Flip', wPtr); WaitSecs(time);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
    Screen('Flip', wPtr); WaitSecs(time);
    end
    % 3. estimulos + dot 
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        end
    Screen('Flip', wPtr); WaitSecs(timedot);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot  
        end
    Screen('Flip', wPtr); WaitSecs(timedot);
    end
    % 4.pantalla vacía
    Screen('FillRect', wPtr, [180 180 180]);
    Screen('Flip', wPtr); WaitSecs(0.5);
    
end
Screen ('CloseAll')


%% Problema #12.
% Cambia la duración de los estímulos en pantalla. A partir de ahora, cuando estén en la pantalla
% los estímulos más la dot probe, el participante tendrá que pulsar una flecha del teclado para 
% poder seguir con el experimento. ¡No vale una flecha cualquiera! Tiene que pulsar la flecha con
% la misma dirección que la posición de la dot probe. Es decir, si la dot probe está a la 
% izquierda, hay que pulsar la tecla (ß) para pasar a la siguiente pantalla. 

clear all
n = 6; 
%% 
Screen ('Preference','SkipSyncTests', 1); %% just when debbuging
[wPtr, Rect] = Screen('OpenWindow', 0, [180 180 180]);
Screen('Flip', wPtr); WaitSecs(1);
ListenChar(2);
[KeyIsDown, endrt, KeyCode]=KbCheck;
%parametros pantalla:
W = Rect(RectRight); H = RectHeight(Rect); [X,Y] = RectCenter(Rect); a= (X+W/8)- (X-W/8);
left_screen= [W/2-W/8-a H/2-H/8 W/2-W/8 H/2+H/8];
right_screen= [X+W/8 Y-H/8 X+W/8+a Y+H/8];
[right_dotX,right_dotY] = RectCenter (right_screen);
[left_dotX,left_dotY] = RectCenter (left_screen);
%%
%define el tipo de ensayo:
tipo_trial = zeros (2,n);
tipo_trial (1, 1:n/2)=1;
tipo_trial (1, (n/2+1):end)=2;  
tipo_trial (2, 1:n/3)= 1;
tipo_trial (2, (n/3*2-1):end)=2;

KbName('UnifyKeyNames');
right_key=KbName('RightArrow'); 
left_key=KbName('LeftArrow');

%% Ciclo de ensayos
%comienzan los ensayos (n veces)
for i= 1:n 
    %secuencia ensayo:
    % 0.parametros tiempo
    time= 0.250; %tiempo de 
    timedot=1.750; %tiempo de presentación del estímulo
    timefix= 0.2 + (0.5-0.2).*rand; %% elige un numero aleatorio entre 0.2 y 0.5
    %% 1.punto de fijación:
    FixCross = [X-1,Y-20,X+1,Y+20;X-20,Y-1,X+20,Y+1]; %dibuja dos barras de ancho 1*20, con distinta orientación, forma una "+"
    Screen('FillRect', wPtr, [255,255,255], FixCross');
    Screen('Flip', wPtr);
    WaitSecs(timefix);
    %% 2.estimulos
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
    Screen('Flip', wPtr); WaitSecs(time);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
    Screen('Flip', wPtr); WaitSecs(time);
    end
    
    % 3. estimulos + dot 
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        end
    Screen('Flip', wPtr); %WaitSecs(timedot);
    
     FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents; 
   end
    
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot  
        end
    Screen('Flip', wPtr); %WaitSecs(timedot);
    
     FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents;
   end
    
   
    end
    
    % 4.pantalla vacía
    Screen('FillRect', wPtr, [180 180 180]);
    Screen('Flip', wPtr); WaitSecs(0.5);
    
end
Screen ('CloseAll')

%% PROBLEMA #13: 
% Haz que el orden de los ensayos sea aleatorio. (TIP: Puedes “desordenar” las columnas de la matriz tipo_trial una vez 
% que esté creada usando “randperm”).

clear all
n = 6; 
%% 
Screen ('Preference','SkipSyncTests', 1); %% just when debbuging
[wPtr, Rect] = Screen('OpenWindow', 0, [180 180 180]);
Screen('Flip', wPtr); WaitSecs(1);
ListenChar(2);
[KeyIsDown, endrt, KeyCode]=KbCheck;
%parametros pantalla:
W = Rect(RectRight); H = RectHeight(Rect); [X,Y] = RectCenter(Rect); a= (X+W/8)- (X-W/8);
left_screen= [W/2-W/8-a H/2-H/8 W/2-W/8 H/2+H/8];
right_screen= [X+W/8 Y-H/8 X+W/8+a Y+H/8];
[right_dotX,right_dotY] = RectCenter (right_screen);
[left_dotX,left_dotY] = RectCenter (left_screen);
%%
%define el tipo de ensayo:
tipo_trial = zeros (2,n);% la creamos llena de zeros
tipo_trial (1, 1:n/2)=1;
tipo_trial (1, (n/2+1):end)=2; %Ahora haz que la mitad de los valores de tipo_trial sean un 1 y la otra mitad un 2. 
tipo_trial (2, 1:n/3)= 1;
tipo_trial (2, (n/3*2-1):end)=2;
 

random_order = randperm(n);
tipo_trial(1,:)= tipo_trial(1,random_order);
tipo_trial(2,:)= tipo_trial(2,random_order);


KbName('UnifyKeyNames');
right_key=KbName('RightArrow'); 
left_key=KbName('LeftArrow');

%% Ciclo de ensayos
%comienzan los ensayos (n veces)
for i= 1:n 
    %secuencia ensayo:
    % 0.parametros tiempo
    time= 0.250; %tiempo de 
    timedot=1.750; %tiempo de presentación del estímulo
    timefix= 0.2 + (0.5-0.2).*rand; %% elige un numero aleatorio entre 0.2 y 0.5
    %% 1.punto de fijación:
    FixCross = [X-1,Y-20,X+1,Y+20;X-20,Y-1,X+20,Y+1]; %dibuja dos barras de ancho 1*20, con distinta orientación, forma una "+"
    Screen('FillRect', wPtr, [255,255,255], FixCross');
    Screen('Flip', wPtr);
    WaitSecs(timefix);
    %% 2.estimulos
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
    Screen('Flip', wPtr); WaitSecs(time);
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
    Screen('Flip', wPtr); WaitSecs(time);
    end
    
    % 3. estimulos + dot 
    if tipo_trial (1,i) == 1
    Screen ('FillRect', wPtr, [250 0 0], left_screen);
    Screen('FillOval', wPtr, [0 250 0], right_screen); 
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        end
    Screen('Flip', wPtr); %WaitSecs(timedot);
    
     FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents; 
   end
    
    elseif tipo_trial (1,i) == 2
    Screen ('FillRect', wPtr, [250 0 0], right_screen);
    Screen('FillOval', wPtr, [0 250 0], left_screen);
        if tipo_trial (2,i) == 1  
        Screen ('FillRect', wPtr, [250 250 250], [left_dotX-25,left_dotY-25, left_dotX+25,left_dotY+25]); %dot
        elseif tipo_trial (2,i) == 2
        Screen ('FillRect', wPtr, [250 250 250], [right_dotX-25,right_dotY-25, right_dotX+25,right_dotY+25]); %dot  
        end
    Screen('Flip', wPtr); %WaitSecs(timedot);
    
     FlushEvents;
   if tipo_trial(1,i)== tipo_trial (2,i);
        while KeyCode (right_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
   elseif tipo_trial(1,i)~= tipo_trial (2,i);
        while KeyCode (left_key)==0
        [KeyIsDown, endrt, KeyCode]=KbCheck;
        WaitSecs(0.1);
        end
        FlushEvents;
   end
    
   
    end
    
    % 4.pantalla vacía
    Screen('FillRect', wPtr, [180 180 180]);
    Screen('Flip', wPtr); WaitSecs(0.5);
    
end
Screen ('CloseAll')
